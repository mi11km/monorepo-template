// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file rpc/sample/v1/health.proto (package rpc.sample.v1, syntax proto3)
/* eslint-disable */

import type { Message } from "@bufbuild/protobuf";
import type {
  GenEnum,
  GenFile,
  GenMessage,
  GenService,
} from "@bufbuild/protobuf/codegenv2";
import {
  enumDesc,
  fileDesc,
  messageDesc,
  serviceDesc,
} from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";

/**
 * Describes the file rpc/sample/v1/health.proto.
 */
export const file_rpc_sample_v1_health: GenFile =
  /*@__PURE__*/
  fileDesc(
    "ChpycGMvc2FtcGxlL3YxL2hlYWx0aC5wcm90bxINcnBjLnNhbXBsZS52MSI3CgxDaGVja1JlcXVlc3QSJwoHc2VydmljZRgBIAEoCzIWLnJwYy5zYW1wbGUudjEuU2VydmljZSJHCg1DaGVja1Jlc3BvbnNlEjYKBnN0YXR1cxgBIAEoDjIcLnJwYy5zYW1wbGUudjEuU2VydmluZ1N0YXR1c0IIukgFggECEAEiNwoMV2F0Y2hSZXF1ZXN0EicKB3NlcnZpY2UYASABKAsyFi5ycGMuc2FtcGxlLnYxLlNlcnZpY2UiRwoNV2F0Y2hSZXNwb25zZRI2CgZzdGF0dXMYASABKA4yHC5ycGMuc2FtcGxlLnYxLlNlcnZpbmdTdGF0dXNCCLpIBYIBAhABIjIKB1NlcnZpY2USJwoEbmFtZRgBIAEoCUIZukgWchQ6CXNhbXBsZS52MUIHU2VydmljZSqaAQoNU2VydmluZ1N0YXR1cxIeChpTRVJWSU5HX1NUQVRVU19VTlNQRUNJRklFRBAAEhUKEVNFUlZJTkdfU1RBVFVTX09LEAESGgoWU0VSVklOR19TVEFUVVNfTk9UX1lFVBACEhoKFlNFUlZJTkdfU1RBVFVTX1VOS05PV04QAxIaChZTRVJWSU5HX1NUQVRVU19TVE9QUEVEEAQy9wEKDUhlYWx0aFNlcnZpY2UScQoFQ2hlY2sSGy5ycGMuc2FtcGxlLnYxLkNoZWNrUmVxdWVzdBocLnJwYy5zYW1wbGUudjEuQ2hlY2tSZXNwb25zZSItgtPkkwInOgEqIiIvcnBjLnNhbXBsZS52MS5IZWFsdGhTZXJ2aWNlL0NoZWNrEnMKBVdhdGNoEhsucnBjLnNhbXBsZS52MS5XYXRjaFJlcXVlc3QaHC5ycGMuc2FtcGxlLnYxLldhdGNoUmVzcG9uc2UiLYLT5JMCJzoBKiIiL3JwYy5zYW1wbGUudjEuSGVhbHRoU2VydmljZS9XYXRjaDABQkpaSGdpdGh1Yi5jb20vbWkxMWttL21vbm9yZXBvLXRlbXBsYXRlL2dvL2FwcHMvc2FtcGxlL2luZnJhc3RydWN0dXJlL3JwYy92MWIGcHJvdG8z",
    [file_buf_validate_validate, file_google_api_annotations],
  );

/**
 * @generated from message rpc.sample.v1.CheckRequest
 */
export type CheckRequest = Message<"rpc.sample.v1.CheckRequest"> & {
  /**
   * サービス名 (ex. HealthService)
   *
   * @generated from field: rpc.sample.v1.Service service = 1;
   */
  service?: Service;
};

/**
 * Describes the message rpc.sample.v1.CheckRequest.
 * Use `create(CheckRequestSchema)` to create a new message.
 */
export const CheckRequestSchema: GenMessage<CheckRequest> =
  /*@__PURE__*/
  messageDesc(file_rpc_sample_v1_health, 0);

/**
 * @generated from message rpc.sample.v1.CheckResponse
 */
export type CheckResponse = Message<"rpc.sample.v1.CheckResponse"> & {
  /**
   * 提供ステータス
   *
   * @generated from field: rpc.sample.v1.ServingStatus status = 1;
   */
  status: ServingStatus;
};

/**
 * Describes the message rpc.sample.v1.CheckResponse.
 * Use `create(CheckResponseSchema)` to create a new message.
 */
export const CheckResponseSchema: GenMessage<CheckResponse> =
  /*@__PURE__*/
  messageDesc(file_rpc_sample_v1_health, 1);

/**
 * @generated from message rpc.sample.v1.WatchRequest
 */
export type WatchRequest = Message<"rpc.sample.v1.WatchRequest"> & {
  /**
   * サービス名 (ex. HealthService)
   *
   * @generated from field: rpc.sample.v1.Service service = 1;
   */
  service?: Service;
};

/**
 * Describes the message rpc.sample.v1.WatchRequest.
 * Use `create(WatchRequestSchema)` to create a new message.
 */
export const WatchRequestSchema: GenMessage<WatchRequest> =
  /*@__PURE__*/
  messageDesc(file_rpc_sample_v1_health, 2);

/**
 * @generated from message rpc.sample.v1.WatchResponse
 */
export type WatchResponse = Message<"rpc.sample.v1.WatchResponse"> & {
  /**
   * 提供ステータス
   *
   * @generated from field: rpc.sample.v1.ServingStatus status = 1;
   */
  status: ServingStatus;
};

/**
 * Describes the message rpc.sample.v1.WatchResponse.
 * Use `create(WatchResponseSchema)` to create a new message.
 */
export const WatchResponseSchema: GenMessage<WatchResponse> =
  /*@__PURE__*/
  messageDesc(file_rpc_sample_v1_health, 3);

/**
 * @generated from message rpc.sample.v1.Service
 */
export type Service = Message<"rpc.sample.v1.Service"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message rpc.sample.v1.Service.
 * Use `create(ServiceSchema)` to create a new message.
 */
export const ServiceSchema: GenMessage<Service> =
  /*@__PURE__*/
  messageDesc(file_rpc_sample_v1_health, 4);

/**
 * 提供ステータス
 *
 * @generated from enum rpc.sample.v1.ServingStatus
 */
export enum ServingStatus {
  /**
   * 不明
   *
   * @generated from enum value: SERVING_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 提供できる
   *
   * @generated from enum value: SERVING_STATUS_OK = 1;
   */
  OK = 1,

  /**
   * まだ提供できない
   *
   * @generated from enum value: SERVING_STATUS_NOT_YET = 2;
   */
  NOT_YET = 2,

  /**
   * 存在しない
   *
   * @generated from enum value: SERVING_STATUS_UNKNOWN = 3;
   */
  UNKNOWN = 3,

  /**
   * サービスが停止中
   *
   * @generated from enum value: SERVING_STATUS_STOPPED = 4;
   */
  STOPPED = 4,
}

/**
 * Describes the enum rpc.sample.v1.ServingStatus.
 */
export const ServingStatusSchema: GenEnum<ServingStatus> =
  /*@__PURE__*/
  enumDesc(file_rpc_sample_v1_health, 0);

/**
 * サービスの動作状況を確認するためのサービス
 *
 * @generated from service rpc.sample.v1.HealthService
 */
export const HealthService: GenService<{
  /**
   * サービスの動作状況を確認
   *
   * @generated from rpc rpc.sample.v1.HealthService.Check
   */
  check: {
    methodKind: "unary";
    input: typeof CheckRequestSchema;
    output: typeof CheckResponseSchema;
  };
  /**
   * サービスの動作状況を監視
   *
   * @generated from rpc rpc.sample.v1.HealthService.Watch
   */
  watch: {
    methodKind: "server_streaming";
    input: typeof WatchRequestSchema;
    output: typeof WatchResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_rpc_sample_v1_health, 0);
