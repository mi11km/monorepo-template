// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-query v2.1.1 with parameter "target=ts"
// @generated from file google/bytestream/bytestream.proto (package google.bytestream, syntax proto3)
/* eslint-disable */

import { ByteStream } from "./bytestream_pb";

/**
 * `QueryWriteStatus()` is used to find the `committed_size` for a resource
 * that is being written, which can then be used as the `write_offset` for
 * the next `Write()` call.
 *
 * If the resource does not exist (i.e., the resource has been deleted, or the
 * first `Write()` has not yet reached the service), this method returns the
 * error `NOT_FOUND`.
 *
 * The client **may** call `QueryWriteStatus()` at any time to determine how
 * much data has been processed for this resource. This is useful if the
 * client is buffering data and needs to know which data can be safely
 * evicted. For any sequence of `QueryWriteStatus()` calls for a given
 * resource name, the sequence of returned `committed_size` values will be
 * non-decreasing.
 *
 * @generated from rpc google.bytestream.ByteStream.QueryWriteStatus
 */
export const queryWriteStatus = ByteStream.method.queryWriteStatus;
